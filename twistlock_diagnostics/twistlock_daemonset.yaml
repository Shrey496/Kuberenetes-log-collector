apiVersion: v1
items:
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-02-10T19:08:51Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
    name: fluentbit-gke
    namespace: kube-system
    resourceVersion: "73063081"
    uid: 9f196919-e858-42a6-ad5d-56f16b3c877a
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "false"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.31.5-gke.2
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-max-pods-per-node
                  operator: DoesNotExist
                - key: cloud.google.com/gke-logging-variant
                  operator: NotIn
                  values:
                  - MAX_THROUGHPUT
              - matchExpressions:
                - key: cloud.google.com/gke-max-pods-per-node
                  operator: Lt
                  values:
                  - "111"
                - key: cloud.google.com/gke-logging-variant
                  operator: NotIn
                  values:
                  - MAX_THROUGHPUT
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.12-gke.62@sha256:bd48755377a723a91bc3fd96f67796ba3a3023808fd69b37d97cb1aa5985d9ae
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=2
          - --max-log-connections=2
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.9-gke.3@sha256:c85045c80354c2ac7931a103cc3f9d16dd08682e87383be254b37543dfcf0279
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250106_2300_RC0@sha256:3d76420863be0cdbdf5f9a512e032d9b20ae8fd7be4b5eca22ecdb1e867f23bf
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250107.00_p0@sha256:12d99a6a72f4fecd689ead5d93001c1f3acea08ec72a55bbdfc070e0edc30fa4
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 2
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-02-10T19:08:52Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
    name: fluentbit-gke-256pd
    namespace: kube-system
    resourceVersion: "4924694"
    uid: becc13ff-8e3c-47b1-9a3e-1576f3635892
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "false"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.31.5-gke.2
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-max-pods-per-node
                  operator: Gt
                  values:
                  - "110"
                - key: cloud.google.com/gke-logging-variant
                  operator: NotIn
                  values:
                  - MAX_THROUGHPUT
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.12-gke.62@sha256:bd48755377a723a91bc3fd96f67796ba3a3023808fd69b37d97cb1aa5985d9ae
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 300Mi
            requests:
              cpu: 650m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=5
          - --max-log-connections=5
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.9-gke.3@sha256:c85045c80354c2ac7931a103cc3f9d16dd08682e87383be254b37543dfcf0279
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 200m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250106_2300_RC0@sha256:3d76420863be0cdbdf5f9a512e032d9b20ae8fd7be4b5eca22ecdb1e867f23bf
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250107.00_p0@sha256:12d99a6a72f4fecd689ead5d93001c1f3acea08ec72a55bbdfc070e0edc30fa4
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-02-10T19:08:52Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
    name: fluentbit-gke-max
    namespace: kube-system
    resourceVersion: "4924698"
    uid: c7c808e0-2551-4ad7-9111-258bddfbdf2e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "false"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.31.5-gke.2
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-logging-variant
                  operator: In
                  values:
                  - MAX_THROUGHPUT
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.12-gke.62@sha256:bd48755377a723a91bc3fd96f67796ba3a3023808fd69b37d97cb1aa5985d9ae
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: "1"
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=2
          - --max-log-connections=2
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.9-gke.3@sha256:c85045c80354c2ac7931a103cc3f9d16dd08682e87383be254b37543dfcf0279
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: "1"
              memory: 350Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250106_2300_RC0@sha256:3d76420863be0cdbdf5f9a512e032d9b20ae8fd7be4b5eca22ecdb1e867f23bf
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250107.00_p0@sha256:12d99a6a72f4fecd689ead5d93001c1f3acea08ec72a55bbdfc070e0edc30fa4
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
    creationTimestamp: "2025-02-10T19:08:58Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent
    namespace: kube-system
    resourceVersion: "73063056"
    uid: 9ab98d05-c5ce-405b-8875-069c9bb522a8
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.131.4-gke.2
          configHash: uUtYCRj6DHl6jgXLHHHbPGCBcX3+HU2fNHcQ4Epn5Bo=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: DoesNotExist
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT
          - --enable-uas-sink=false
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 70Mi
            requests:
              cpu: 6m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 40Mi
            requests:
              cpu: 3m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 4
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
    creationTimestamp: "2025-02-10T19:08:58Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-10
    namespace: kube-system
    resourceVersion: "71993416"
    uid: 2f072197-a496-4247-8255-099c2378fb32
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.131.4-gke.2
          configHash: uUtYCRj6DHl6jgXLHHHbPGCBcX3+HU2fNHcQ4Epn5Bo=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "10"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT
          - --enable-uas-sink=false
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 80Mi
            requests:
              cpu: 6m
              memory: 80Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 3m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
    creationTimestamp: "2025-02-10T19:08:59Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-100
    namespace: kube-system
    resourceVersion: "71993428"
    uid: aefd3aab-3bd0-4217-a4e6-dc1c6d416330
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.131.4-gke.2
          configHash: uUtYCRj6DHl6jgXLHHHbPGCBcX3+HU2fNHcQ4Epn5Bo=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "100"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT
          - --enable-uas-sink=false
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 6m
              memory: 170Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 140Mi
            requests:
              cpu: 3m
              memory: 140Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
    creationTimestamp: "2025-02-10T19:08:59Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-20
    namespace: kube-system
    resourceVersion: "71993437"
    uid: c1f164b1-25bd-4e46-88a5-4faf83b7226e
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.131.4-gke.2
          configHash: uUtYCRj6DHl6jgXLHHHbPGCBcX3+HU2fNHcQ4Epn5Bo=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "20"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT
          - --enable-uas-sink=false
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 90Mi
            requests:
              cpu: 6m
              memory: 90Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 60Mi
            requests:
              cpu: 3m
              memory: 60Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
    creationTimestamp: "2025-02-10T19:08:59Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-200
    namespace: kube-system
    resourceVersion: "71993446"
    uid: d51ab9c5-4d92-4626-b751-757faa2d4e48
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.131.4-gke.2
          configHash: uUtYCRj6DHl6jgXLHHHbPGCBcX3+HU2fNHcQ4Epn5Bo=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "200"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT
          - --enable-uas-sink=false
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 270Mi
            requests:
              cpu: 6m
              memory: 270Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 240Mi
            requests:
              cpu: 3m
              memory: 240Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
    creationTimestamp: "2025-02-10T19:08:59Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-50
    namespace: kube-system
    resourceVersion: "71993451"
    uid: 164af84a-8707-4225-b9cc-089e60040268
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.131.4-gke.2
          configHash: uUtYCRj6DHl6jgXLHHHbPGCBcX3+HU2fNHcQ4Epn5Bo=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "50"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT
          - --enable-uas-sink=false
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 120Mi
            requests:
              cpu: 6m
              memory: 120Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 90Mi
            requests:
              cpu: 3m
              memory: 90Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
    creationTimestamp: "2025-02-10T19:09:00Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-500
    namespace: kube-system
    resourceVersion: "71993456"
    uid: a6e308a9-427d-4d12-ad68-23a8b5c93047
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.131.4-gke.2
          configHash: uUtYCRj6DHl6jgXLHHHbPGCBcX3+HU2fNHcQ4Epn5Bo=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "500"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT
          - --enable-uas-sink=false
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 570Mi
            requests:
              cpu: 6m
              memory: 570Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.13.0-gke.2@sha256:919c4c4d46db4c8a0125eb2254d073c882c6b765a1d2c713e69bbe6b6c94cd86
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 540Mi
            requests:
              cpu: 3m
              memory: 540Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20240902_2300_RC0@sha256:52df59dabb65d3d315ee03768ca1e9d84da2821a799c54cab7539f5f5b19849e
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
    creationTimestamp: "2025-02-10T19:09:00Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-windows
    namespace: kube-system
    resourceVersion: "71993457"
    uid: b178971d-e867-41a2-97a7-e1be34d2bef1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.131.4-gke.2
          configHash: uUtYCRj6DHl6jgXLHHHbPGCBcX3+HU2fNHcQ4Epn5Bo=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        containers:
        - command:
          - c:\otelsvc.exe
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT
          - --enable-uas-sink=false
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: KUBERNETES_SERVICE_HOST
            value: kubernetes.default.svc.cluster.local
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: keep
          - name: LINUX_JOB_ACTION
            value: drop
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent-windows:1.13.0-gke.2@sha256:8a095c3eb879cfe3f056a794f2dc2251a5626ced9637bea98fb84b3a3552d1eb
          imagePullPolicy: IfNotPresent
          name: gke-metrics-agent
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - c:\otelsvc.exe
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: KUBERNETES_SERVICE_HOST
            value: kubernetes.default.svc.cluster.local
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: keep
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent-windows:1.13.0-gke.2@sha256:8a095c3eb879cfe3f056a794f2dc2251a5626ced9637bea98fb84b3a3552d1eb
          imagePullPolicy: IfNotPresent
          name: core-metrics-exporter
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - command:
          - c:\gke_metrics_collector.exe
          env:
          - name: GOMAXPROCS
            value: "1"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector-win:20240902_2300_RC0@sha256:091efcb403e37878829ee23d98871c92de27f53c3e9ccd66af7b9141af092f6d
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 200Mi
            requests:
              cpu: 20m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: networkpolicy_antrea-metrics-collector-config-data
              path: networkpolicy_antrea-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "7"
    creationTimestamp: "2025-02-10T19:09:36Z"
    generation: 7
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "71993852"
    uid: 3eab6c30-836b-4834-932a-ef4dbc942b6b
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - kube-proxy --cluster-cidr=10.44.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=DisableKubeletCloudCredentialProviders=true,UnauthenticatedHTTP2DOSMitigation=true,KMSv1=true
            --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m
            --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1>>/var/log/kube-proxy.log
            2>&1
          env:
          - name: KUBERNETES_SERVICE_HOST
            value: 10.128.0.15
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/kube-proxy-amd64:v1.31.6-gke.1064001
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
          node.kubernetes.io/kube-proxy-ds-ready: "true"
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 7
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "5"
    creationTimestamp: "2025-02-10T19:09:04Z"
    generation: 5
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: maintenance-handler
      name: maintenance-handler
    name: maintenance-handler
    namespace: kube-system
    resourceVersion: "71993497"
    uid: d412759d-3555-415e-8e26-7ccf3ac04eaa
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: maintenance-handler
        name: maintenance-handler
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-maintenance-handler
          components.gke.io/component-version: 1.31.0-gke.3
        creationTimestamp: null
        labels:
          k8s-app: maintenance-handler
          name: maintenance-handler
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
              - matchExpressions:
                - key: cloud.google.com/gke-tpu-accelerator
                  operator: Exists
        containers:
        - args:
          - --logtostderr
          - --taint=cloud.google.com/impending-node-termination::NoSchedule
          - --test-env=false
          - --regular-vm-timeout=1h0m0s
          - --tpu-vm-timeout=5m
          - --sf-timeout=10m
          - --immediate-shutdown=true
          - --disable-smart-repair-immediate-shutdown
          - --kubeconfig=/var/lib/kubelet/kubeconfig
          - --in-cluster=false
          command:
          - ./gpu-maintenance-handler
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER_PROJECT
            value: "619613537776"
          - name: CLUSTER_LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: CONTAINER_NAME
            value: gpu-maintenance-handler
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gpu-maintenance-handler:1.31.0-gke.4@sha256:56398cd7f8f4dbd8352342246407e62429e6c965ec9bf97da2f9d54305f5807a
          imagePullPolicy: IfNotPresent
          name: maintenance-handler
          ports:
          - containerPort: 8526
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
          - mountPath: /run/dbus
            name: run-dbus
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: maintenance-handler
        serviceAccountName: maintenance-handler
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/
            type: Directory
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /run/dbus
            type: Directory
          name: run-dbus
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 5
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-02-10T19:09:39Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metadata-proxy
      kubernetes.io/cluster-service: "true"
      version: v0.1
    name: metadata-proxy-v0.1
    namespace: kube-system
    resourceVersion: "1239"
    uid: fccc4ac7-8b32-4d1d-b5a7-58c9816f260f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metadata-proxy
        version: v0.1
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metadata-proxy
          kubernetes.io/cluster-service: "true"
          version: v0.1
      spec:
        containers:
        - args:
          - --addr=0.0.0.0:988
          image: k8s.gcr.io/metadata-proxy:v0.1.12
          imagePullPolicy: IfNotPresent
          name: metadata-proxy
          resources:
            limits:
              cpu: 30m
              memory: 25Mi
            requests:
              cpu: 30m
              memory: 25Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=metadata_proxy:http://127.0.0.1:989?whitelisted=request_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gke.gcr.io/prometheus-to-sd:v0.11.1-gke.1
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources:
            limits:
              cpu: 2m
              memory: 20Mi
            requests:
              cpu: 2m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          cloud.google.com/metadata-proxy-ready: "true"
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metadata-proxy
        serviceAccountName: metadata-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
    creationTimestamp: "2025-02-10T19:09:24Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nccl-fastsocket-installer
    name: nccl-fastsocket-installer
    namespace: kube-system
    resourceVersion: "32824426"
    uid: 5dbcde52-67b2-4fe8-b23c-299943f6d438
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nccl-fastsocket-installer
    template:
      metadata:
        annotations:
          components.gke.io/component-name: nccl-fast-socket-installer
          components.gke.io/component-version: 1.31.0-gke.2
        creationTimestamp: null
        labels:
          k8s-app: nccl-fastsocket-installer
          name: nccl-fastsocket-installer
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: cloud.google.com/gke-nccl-fastsocket
                  operator: Exists
        automountServiceAccountToken: false
        containers:
        - image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/pause@sha256:927d98197ec1141a368550822d18fa1c60bdae27b78b0c004f705f548c07814f
          imagePullPolicy: IfNotPresent
          name: pause
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - sh
          - -c
          - |
            cp /usr/lib/libnccl-net.so $NCCL_INSTALL_DIR/
          env:
          - name: NCCL_INSTALL_DIR
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/fastsocket-installer:1.31.0-gke.2@sha256:caedcf157ea0526bfe90baed106f69229d735180cb0bc6b9865353a119ecf38b
          imagePullPolicy: IfNotPresent
          name: nccl-fastsocket-installer
          resources:
            limits:
              memory: 100Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/nvidia/lib64
            name: nvidia-install-lib64-dir-host
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /home/kubernetes/bin/nvidia/lib64
            type: DirectoryOrCreate
          name: nvidia-install-lib64-dir-host
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "5"
    creationTimestamp: "2025-02-10T19:09:02Z"
    generation: 5
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-large-cos
    namespace: kube-system
    resourceVersion: "71993475"
    uid: cf6d8cdd-3391-4742-84f5-386a46b935bc
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.31.0-gke.2
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "63"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.31.0-gke.2@sha256:be8e970a5cc9ea2fcbf0b77dd6cdf558a96aef1b3d7857db566c09b50841524f
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250217_2300_RC0@sha256:b78e39d6a9780ee6e86038727ce45839e6cb2519c836db9cf95cf951ea47ab70
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install --version=latest || exit 1
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install || exit 1
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.31.0-gke.2@sha256:81ff6863c9b6580fb6f5bdbb79bb6f70b4e4191e322b6de4abed6b313837a595
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 5
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "5"
    creationTimestamp: "2025-02-10T19:09:03Z"
    generation: 5
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-large-ubuntu
    namespace: kube-system
    resourceVersion: "71993487"
    uid: 9b2ff953-552d-4523-974c-a2abfa16e810
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.31.0-gke.2
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "63"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.31.0-gke.2@sha256:be8e970a5cc9ea2fcbf0b77dd6cdf558a96aef1b3d7857db566c09b50841524f
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250217_2300_RC0@sha256:b78e39d6a9780ee6e86038727ce45839e6cb2519c836db9cf95cf951ea47ab70
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.31.0-gke.2@sha256:81ff6863c9b6580fb6f5bdbb79bb6f70b4e4191e322b6de4abed6b313837a595
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 5
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "5"
    creationTimestamp: "2025-02-10T19:09:02Z"
    generation: 5
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-medium-cos
    namespace: kube-system
    resourceVersion: "71993467"
    uid: dd2970ca-8a78-42f7-99f5-9d035e344001
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.31.0-gke.2
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "64"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "15"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.31.0-gke.2@sha256:be8e970a5cc9ea2fcbf0b77dd6cdf558a96aef1b3d7857db566c09b50841524f
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 75Mi
            requests:
              cpu: 50m
              memory: 75Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250217_2300_RC0@sha256:b78e39d6a9780ee6e86038727ce45839e6cb2519c836db9cf95cf951ea47ab70
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install --version=latest || exit 1
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install || exit 1
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.31.0-gke.2@sha256:81ff6863c9b6580fb6f5bdbb79bb6f70b4e4191e322b6de4abed6b313837a595
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 5
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "5"
    creationTimestamp: "2025-02-10T19:09:03Z"
    generation: 5
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-medium-ubuntu
    namespace: kube-system
    resourceVersion: "71993483"
    uid: dff41c88-f460-46f3-bb3d-fac54b7e4b89
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.31.0-gke.2
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "64"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "15"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.31.0-gke.2@sha256:be8e970a5cc9ea2fcbf0b77dd6cdf558a96aef1b3d7857db566c09b50841524f
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 75Mi
            requests:
              cpu: 50m
              memory: 75Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250217_2300_RC0@sha256:b78e39d6a9780ee6e86038727ce45839e6cb2519c836db9cf95cf951ea47ab70
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.31.0-gke.2@sha256:81ff6863c9b6580fb6f5bdbb79bb6f70b4e4191e322b6de4abed6b313837a595
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 5
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "5"
    creationTimestamp: "2025-02-10T19:09:02Z"
    generation: 5
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-small-cos
    namespace: kube-system
    resourceVersion: "71993461"
    uid: 27da1488-ede8-4fef-a3ef-1a6f74859736
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.31.0-gke.2
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "16"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.31.0-gke.2@sha256:be8e970a5cc9ea2fcbf0b77dd6cdf558a96aef1b3d7857db566c09b50841524f
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250217_2300_RC0@sha256:b78e39d6a9780ee6e86038727ce45839e6cb2519c836db9cf95cf951ea47ab70
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install --version=latest || exit 1
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /cos-gpu-installer install || exit 1
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.31.0-gke.2@sha256:81ff6863c9b6580fb6f5bdbb79bb6f70b4e4191e322b6de4abed6b313837a595
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 5
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "5"
    creationTimestamp: "2025-02-10T19:09:02Z"
    generation: 5
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-small-ubuntu
    namespace: kube-system
    resourceVersion: "71993481"
    uid: 88e7083a-2242-4b24-9af8-4f093c719d37
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.31.0-gke.2
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "16"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        automountServiceAccountToken: false
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.31.0-gke.2@sha256:be8e970a5cc9ea2fcbf0b77dd6cdf558a96aef1b3d7857db566c09b50841524f
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "619613537776"
          - name: LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250217_2300_RC0@sha256:b78e39d6a9780ee6e86038727ce45839e6cb2519c836db9cf95cf951ea47ab70
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.31.0-gke.2@sha256:81ff6863c9b6580fb6f5bdbb79bb6f70b4e4191e322b6de4abed6b313837a595
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 5
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-02-10T19:09:27Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-compute-persistent-disk-csi-driver
    name: pdcsi-node
    namespace: kube-system
    resourceVersion: "73063093"
    uid: 5e0393cf-c3a8-441d-a538-af9000254cf5
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: pdcsi
          components.gke.io/component-version: 0.20.19
        creationTimestamp: null
        labels:
          k8s-app: gcp-compute-persistent-disk-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.29@sha256:b87f0c02a41dc0c0ed31039998640858f44263f467301b9aaf9cbf4bab8d3f5b
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: csi-driver-registrar
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --run-controller-service=false
          - --run-node-service=true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.14.2-gke.8@sha256:bbbf275b1482cf3fc658f0bde28b1fbd24054451b5a97e23812821c82374a2b2
          imagePullPolicy: IfNotPresent
          name: gce-pd-driver
          resources:
            limits:
              memory: 450Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /dev
            name: device-dir
          - mountPath: /etc/udev
            name: udev-rules-etc
          - mountPath: /lib/udev
            name: udev-rules-lib
          - mountPath: /run/udev
            name: udev-socket
          - mountPath: /sys
            name: sys
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: pdcsi-node-sa
        serviceAccountName: pdcsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /etc/udev
            type: Directory
          name: udev-rules-etc
        - hostPath:
            path: /lib/udev
            type: Directory
          name: udev-rules-lib
        - hostPath:
            path: /run/udev
            type: Directory
          name: udev-socket
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - emptyDir:
            sizeLimit: 5Mi
          name: tmp
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 2
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-02-10T19:09:27Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-compute-persistent-disk-csi-driver
    name: pdcsi-node-windows
    namespace: kube-system
    resourceVersion: "32824486"
    uid: ce2becdf-0b60-4262-b972-59f1de85a30d
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: pdcsi
          components.gke.io/component-version: 0.20.19
        creationTimestamp: null
        labels:
          k8s-app: gcp-compute-persistent-disk-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=unix://C:\\csi\\csi.sock
          - --kubelet-registration-path=C:\\var\\lib\\kubelet\\plugins\\pd.csi.storage.gke.io\\csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.29@sha256:b87f0c02a41dc0c0ed31039998640858f44263f467301b9aaf9cbf4bab8d3f5b
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --run-controller-service=false
          - --run-node-service=true
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.14.2-gke.8@sha256:bbbf275b1482cf3fc658f0bde28b1fbd24054451b5a97e23812821c82374a2b2
          imagePullPolicy: IfNotPresent
          name: gce-pd-driver
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\var\lib\kubelet
            mountPropagation: None
            name: kubelet-dir
          - mountPath: C:\csi
            name: plugin-dir
          - mountPath: \\.\pipe\csi-proxy-volume-v1
            name: csi-proxy-volume-v1
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1
            name: csi-proxy-filesystem-v1
          - mountPath: \\.\pipe\csi-proxy-disk-v1
            name: csi-proxy-disk-v1
          - mountPath: \\.\pipe\csi-proxy-disk-v1beta2
            name: csi-proxy-disk-pipe
          - mountPath: \\.\pipe\csi-proxy-volume-v1beta1
            name: csi-proxy-volume-pipe
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1beta1
            name: csi-proxy-filesystem-pipe
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: pdcsi-node-sa
        serviceAccountName: pdcsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1
            type: ""
          name: csi-proxy-disk-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1
            type: ""
          name: csi-proxy-volume-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1
            type: ""
          name: csi-proxy-filesystem-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1beta2
            type: ""
          name: csi-proxy-disk-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1beta1
            type: ""
          name: csi-proxy-volume-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1beta1
            type: ""
          name: csi-proxy-filesystem-pipe
        - hostPath:
            path: \var\lib\kubelet\plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: \var\lib\kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: \var\lib\kubelet\plugins\pd.csi.storage.gke.io
            type: DirectoryOrCreate
          name: plugin-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-02-10T19:08:40Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: runsc-metric-server
      kubernetes.io/cluster-service: "true"
    name: runsc-metric-server
    namespace: kube-system
    resourceVersion: "459"
    uid: bbc4a2c4-a1aa-405c-9a89-00da3b1df42c
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: runsc-metric-server
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: runsc-metric-server
      spec:
        containers:
        - command:
          - /runsc-metric-server
          - --metric-server=127.0.0.1:9115
          - --root=/run/containerd/runsc/k8s.io
          - --alsologtostderr=true
          - metric-server
          - --allow-unknown-root=true
          - --exporter-prefix=
          - --pid-file=/run/containerd/runsc/metric-server.pid
          image: gcr.io/distroless/static
          imagePullPolicy: IfNotPresent
          name: runsc-metric-server
          resources:
            limits:
              cpu: 25m
              memory: 64Mi
            requests:
              cpu: 3m
              memory: 12Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /runsc-metric-server
            name: runscbin
          - mountPath: /run/containerd/runsc
            name: containerdrunsc
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        nodeSelector:
          kubernetes.io/os: linux
          sandbox.gke.io/runtime: gvisor
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        volumes:
        - hostPath:
            path: /home/containerd/usr/local/sbin/runsc
            type: ""
          name: runscbin
        - hostPath:
            path: /run/containerd/runsc
            type: ""
          name: containerdrunsc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 100%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "5"
    creationTimestamp: "2025-02-10T19:09:32Z"
    generation: 5
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: tpu-device-plugin
    name: tpu-device-plugin
    namespace: kube-system
    resourceVersion: "32824535"
    uid: 7bab6bb4-2555-4a43-ba09-4ef0c8dcd05f
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: tpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: tpu-device-plugin
          components.gke.io/component-version: 1.31.0-gke.3
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: tpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-tpu-accelerator
                  operator: Exists
        automountServiceAccountToken: false
        containers:
        - env:
          - name: CLUSTER_PROJECT
            value: "619613537776"
          - name: CLUSTER_LOCATION
            value: us-central1
          - name: CLUSTER_NAME
            value: aamir-defenders
          - name: CONTAINER_NAME
            value: tpu-device-plugin
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/tpu-device-plugin:1.31.0-gke.1@sha256:9a65abaf6095f5b599a6b64a24cd5a204bbe261e925134def5873b6d9cdecc18
          imagePullPolicy: IfNotPresent
          name: tpu-device-plugin
          resources:
            limits:
              memory: 80Mi
            requests:
              cpu: 80m
              memory: 80Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /tmp/tpu_logs
            name: tpu-logs
        - args:
          - /bin/sh
          - -c
          - tail -n+1 -F /tmp/tpu_logs/tpu_driver.INFO
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250207.00_p0@sha256:dce99ff7978706ab3cabfeaae65d404d033d27a020e2c32a2f3a1daffd033343
          imagePullPolicy: IfNotPresent
          name: sidecar-log-collector
          resources:
            limits:
              memory: 20Mi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/tpu_logs
            name: tpu-logs
            readOnly: true
        - args:
          - --logtostderr
          - --census_enabled=false
          - --gid=
          - --uid=
          - --chroot=
          command:
          - vbar_control_agent_files/bin/vbar_control_agent
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/vbar_control_agent@sha256:c75f89f6bf6b2d433cc3c1368bd8e1897a21a596805bbe91ac145de4f8e0cedb
          imagePullPolicy: IfNotPresent
          name: vbar-control-agent
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 10m
              memory: 150Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /tpu_network_optimizer.sh
          image: us-central1-artifactregistry.gcr.io/gke-release/gke-release/tpu_network_optimizer:tpu_network_optimizer_20241022.00_p1@sha256:e5aba9c51fc0750863187bb22767b12890a16fd98dd74fd012f3510d38874dde
          imagePullPolicy: IfNotPresent
          name: tpu-network-optimization
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys
            name: sys
          - mountPath: /proc
            name: proc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: DirectoryOrCreate
          name: device-plugin
        - hostPath:
            path: /dev
            type: DirectoryOrCreate
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: DirectoryOrCreate
          name: pod-resources
        - hostPath:
            path: /etc/tpu
            type: DirectoryOrCreate
          name: tpu-env
        - hostPath:
            path: /tmp/tpu_logs
            type: DirectoryOrCreate
          name: tpu-logs
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - hostPath:
            path: /proc
            type: Directory
          name: proc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 5
kind: List
metadata:
  resourceVersion: ""